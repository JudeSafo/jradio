package ru.r2cloud.jradio.demod;

import pl.edu.icm.jlargearrays.ConcurrencyUtils;
import ru.r2cloud.jradio.ByteInput;
import ru.r2cloud.jradio.FloatInput;
import ru.r2cloud.jradio.blocks.ChannelModel;
import ru.r2cloud.jradio.blocks.Constellation;
import ru.r2cloud.jradio.blocks.ConstellationModulator;

public class BpskDemodulatorBer extends AbstractBer {

	// the latest result is:
	//  0.2857882082462311 0.25031790137290955 0.2643705904483795 0.23282496631145477 0.21479575335979462 0.18863709270954132 0.18432171642780304 0.13624191284179688 0.14989440143108368 0.15147049725055695 0.130044624209404 0.12769508361816406 0.131460502743721 0.12214025110006332 0.1046854630112648 0.10195287317037582 0.08681360632181168 0.0953776016831398 0.08296553045511246 0.05721569061279297 0.06778589636087418 0.05921332165598869 0.06326325982809067 0.06050936505198479 0.0432840995490551 0.03942680358886719 0.039298057556152344 0.039422035217285156 0.037817955017089844 0.03619607165455818 0.0348103828728199 0.02681764028966427 0.030137060210108757 0.02436383254826069 0.02331034652888775 0.02178986556828022 0.02249654196202755 0.017974533140659332 0.018490789458155632 0.0174535121768713 0.016607917845249176 0.015617686323821545 0.015118598937988281 0.013877230696380138 0.013095535337924957 0.012324649840593338 0.009960171766579151 0.009233791381120682 0.008618350140750408 0.007978755049407482 0.009064355865120888 0.006835300475358963 0.006301559042185545 0.005812961608171463 0.005367911886423826 0.0049352627247571945 0.004520095884799957 0.004151023458689451 0.0037730529438704252 0.003432590514421463 0.0031356781255453825 0.0028708763420581818 0.0025933559518307447 0.002372103976085782 0.0021676986943930387 0.0019410433014854789 0.00176270364318043 0.0015805518487468362 0.0014203364262357354 0.0012814173242077231 0.0011320071062073112 0.0010099416831508279 8.980389684438705E-4 8.122095023281872E-4 7.171600009314716E-4 6.440480356104672E-4 5.585334147326648E-4 5.032203043811023E-4 4.4345855712890625E-4 3.9513595402240753E-4 3.48089262843132E-4 3.147125244140625E-4 2.686170337256044E-4 2.323780208826065E-4 2.05356627702713E-4 1.7515818763058633E-4 1.529064029455185E-4 1.3351254165172577E-4 1.1730194091796875E-4 9.918399155139923E-5 8.646646892884746E-5 7.247738540172577E-5 6.45307227387093E-5 5.753710865974426E-5 4.831949991057627E-5 4.1325267375214025E-5 3.9417918742401525E-5 3.051571547985077E-5 2.670226058398839E-5 2.6385610908619128E-5 2.1298727006069385E-5
	public static void main(String[] args) throws Exception {
		StringBuilder b = new StringBuilder();
		BpskDemodulatorBer2 fskBer = new BpskDemodulatorBer2();
		for (float ebno = 0.0f; ebno < 10.01f; ebno += 0.1f) {
			b.append(" ").append(fskBer.calculateBer(ebno));
		}
		System.out.println(b.toString());
		ConcurrencyUtils.shutdownThreadPoolAndAwaitTermination();
	}

	@Override
	public ByteInput createModulatorDemodulator(ByteInput input, float ebno) {
		FloatInput next = new ConstellationModulator(input, Constellation.BPSK, sps, false, false, 0.35f);
		next = new ChannelModel(next, (float) (Math.sqrt(sps) / Math.pow(10, (ebno / 20))), 0, 1.0f, null, 42);
		return new BpskDemodulator(next, (int) (sampleRate / sps), 1, 0, false);
	}

}
