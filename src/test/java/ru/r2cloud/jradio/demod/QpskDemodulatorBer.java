package ru.r2cloud.jradio.demod;

import pl.edu.icm.jlargearrays.ConcurrencyUtils;
import ru.r2cloud.jradio.ByteInput;
import ru.r2cloud.jradio.FloatInput;
import ru.r2cloud.jradio.blocks.ChannelModel;
import ru.r2cloud.jradio.blocks.Constellation;
import ru.r2cloud.jradio.blocks.ConstellationModulator;

public class QpskDemodulatorBer extends AbstractBer {

	private static final float BITS_PER_SYMBOL = 2.0f;

	// the latest result is:
	// 0.08417161554098129 0.08165773004293442 0.07897218316793442 0.07644589990377426 0.07397874444723129 0.07154051214456558 0.06915950775146484 0.06680075079202652 0.06449031829833984 0.062229156494140625 0.059968311339616776 0.05783367156982422 0.05568122863769531 0.05359490588307381 0.051512718200683594 0.04947439953684807 0.0475107841193676 0.04558340832591057 0.04367669299244881 0.04182402417063713 0.040024757385253906 0.03822644427418709 0.03651110455393791 0.0348409004509449
	// 0.03321456536650658 0.03161811828613281 0.030086198821663857 0.028608957305550575 0.027170179411768913 0.025730447843670845 0.024377187713980675 0.023060796782374382 0.021810846403241158 0.02058950811624527 0.019419988617300987 0.018338518217206 0.017253555357456207 0.016227401793003082 0.01524670422077179 0.014315920881927013 0.013428370468318462 0.012553848326206207 0.011696495115756989 0.010924972593784332 0.010190007276833057 0.00947475153952837 0.008795100264251232
	// 0.008158044889569283 0.007556276861578226 0.006992020178586245 0.006434119772166014 0.005934711545705795 0.005468364804983139 0.0050182281993329525 0.0046087875962257385 0.004208879545331001 0.0038611062336713076 0.003515239804983139 0.003204661188647151 0.0029128349851816893 0.0026321380864828825 0.00238831527531147 0.002164836972951889 0.0019337268313392997 0.001744582667015493 0.0015684720128774643 0.0014053942868486047 0.0012445406755432487 0.0011119786649942398 9.803710272535682E-4
	// 8.691095863468945E-4 7.673874497413635E-4 6.758353556506336E-4 5.947742611169815E-4 5.238838493824005E-4 4.479065537452698E-4 3.887806087732315E-4 3.407783806324005E-4 2.9214099049568176E-4 2.524039300624281E-4 2.1839079272467643E-4 1.8405851733405143E-4 1.5544767666142434E-4 1.3351191591937095E-4 1.1253232514718547E-4 9.34594645514153E-5 7.660935079911724E-5 6.484612822532654E-5 5.4037198424339294E-5 4.481896758079529E-5 3.909878432750702E-5 3.3376116334693506E-5 2.6065235942951404E-5
	// 2.1933266907581128E-5 2.0025918274768628E-5 1.7164895325549878E-5 1.3666848644788843E-5 9.534880518913269E-6 6.992369890213013E-6 4.767129667015979E-6 4.131346940994263E-6

	public static void main(String[] args) throws Exception {
		StringBuilder b = new StringBuilder();
		QpskDemodulatorBer ber = new QpskDemodulatorBer();
		for (float ebno = 0.0f; ebno < 10.01f; ebno += 0.1f) {
			b.append(" ").append(ber.calculateBer(ebno));
		}
		System.out.println(b.toString());
		ConcurrencyUtils.shutdownThreadPoolAndAwaitTermination();
	}

	@Override
	public ByteInput createModulatorDemodulator(ByteInput input, float ebno) {
		Constellation qpsk = new Constellation(new float[] { -1.0f, -1.0f, -1.0f, 1.0f, 1.0f, 1.0f, 1.0f, -1.0f }, new int[] { 0, 1, 3, 2 }, 4, 1);
		FloatInput next = new ConstellationModulator(input, qpsk, sps, false, true, 0.35f);
		next = new ChannelModel(next, EbN0_to_noise_voltage(ebno, sps), 0, 1.0f, null, 42);
		return new QpskDemodulator(next, (int) (sampleRate / (sps * BITS_PER_SYMBOL)), qpsk);
	}

	private static float EbN0_to_noise_voltage(float ebno, float sps) {
		return (float) (1.0 / Math.sqrt(BITS_PER_SYMBOL / sps * Math.pow(10, (ebno / 10))));
	}
}
