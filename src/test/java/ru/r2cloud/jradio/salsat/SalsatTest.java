package ru.r2cloud.jradio.salsat;

import static org.junit.Assert.assertNotNull;

import java.io.File;
import java.io.FileWriter;

import org.junit.Test;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

import ru.r2cloud.jradio.snet.SnetBeacon;

public class SalsatTest {

	@Test
	public void testSuccess() throws Exception {
		@SuppressWarnings("resource")
		Salsat input = new Salsat(null);
		SnetBeacon result = input.parseBeacon(packedToUnpacked(new byte[] { 4, -97, 50, -8, 11, 41, 12, 76, -109, 34, -6, 3, -101, 6, 0, -105, -80, -12, -119, -70, 13, 104, 16, -128, 114, 65, 115, -62, -119, 6, -64, 41, 13, -115, -114, -49, -82, -100, -125, 8, 64, 0, 0, 32, 0, 51, 21, 32, 23, -1, -39, 55, -32, 32, 54, 0, 48, -73, -45, 32, 60, -1, -25, 55, -8, -96, 13, 127, -15, 55, -64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, -97, -50, 4, 25, 111, -62, 111, -26,
				-124, 38, -92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, -77, 100, 92, -60, 85, 68, -8, -70, -15, 95, -115, 17, -82, -64, 49, 111, -13, 111, 26, -39, -76, -121, -87, 71, 30, -36, 9, 102, -109, 119, -41, -32, -111, -114, 44, -107, 28, -30, 73, 48, 22, -45, -44, 100, 27, 4, -37, -106, 31, 103, 14, 1, -115, 16, -16, 34, 110, 112, 99, 9, -40, 41, -128, 31, 120, -92, -9, -29, 118, -29, -66, 49, -78, -30, -13, -14, 86, 103, -87, 17, -16, 107, -18, -68, -64, 100, -54, -35, 87, 1, 30, -31,
				27, -118, 63, 51, 49, -44, 92, -66, 70, -37, -47, 2, 86, 55, 15, -57, 15, 2, 121, -89, 34, 65, -13, -92, 125, 107, 27, -51, -10, 65, 61, 111, 92, -66, 48, 70, -9, -86, 126, -95, -121, -24, 125, 33, 102, 27, -88, -123, 107, -65, -1, -1, -1, -19, -103, 63, -1, -1, -1, -1, -1, -1, -1, -1, -2, -86, -86, -86, 68, 20, 25, -43, 68, -108, 9, -98, -65, -112, 9, 14, 101, -48, 23, 82, 26, -103, 54, 69, 52, 5, 54, 4, 1, 55, 97, 73, 16, -12, 26, -48, 41, 0, 68, -126, -25, -123, 36, 11, -128,
				82, 27, 27, 61, -97, 93, 57, 6, 16, -128, 0, 0, 64, 0, 22, 60, 64, 47, -1, -62, 111, -121, -128, 10, 0, 81, 111, -38, 64, 109, -1, -114, 111, -111, 64, 78, -1, -94, 111, -128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -53, -65, -75, -32, 28, -65, 113, 63, 19, 16, -120, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58, -51, -111, 115, 17, 85, 19, -30, -21, -59, 126, 52, 118, 39, 47, 121, -52, 109, -68, 107, 102, -46, 30, -91, -25, -121, 95, -123, 42, -51, -33,
				95, -126, 70, 56, -78, 84, -90, -71, 8, -105, -120, 46, 18, -64, 80, 16, 96, 27, 113, 31, -27, 16, 12, 116, -19, 5, -121, -72, 58, 63, -82, -40, 40, -19, 22, -14, 38, -78, 120, 35, 25, -72, 57, -66, -78, -2, -105, 35, 60, -35, 16, -30, -124, 89, -120, 1, 85, -1, -60, -94, 50, 111, -32, 9, 90, -63, -27, 13, 97, 3, -108, -126, 32, -24 }));
		assertNotNull(result);
		Gson gson = new GsonBuilder().setPrettyPrinting().create();
		FileWriter w = new FileWriter(new File("./src/test/resources/expected/SalsatBeacon.json"));
		gson.toJson(result, w);
		w.close();
	}

	private static byte[] packedToUnpacked(byte[] input) {
		byte[] result = new byte[input.length * 8];
		for (int i = 0; i < input.length; i++) {
			int cur = input[i] & 0xFF;
			for (int j = 0; j < 8; j++) {
				int curBit = (cur >> (7 - j)) & 0x1;
				result[i * 8 + j] = (byte) curBit;
			}
		}
		return result;
	}
}
